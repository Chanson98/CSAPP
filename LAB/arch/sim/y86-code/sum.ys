# Execution begins at address 0
  .pos 0
  irmovq stack, %rsp # Set up stack pointer
  call main # Execute main program
  halt # Terminate program



# Sample linked list
.align 8

ele1:
        .quad 0x00a
        .quad ele2
ele2:
        .quad 0x0b0
        .quad ele3
ele3:
        .quad 0xc00
        .quad 0

main: 
  irmovq ele1, %rdi
  call sum_list
  ret
    

#/* sum_list - Sum the elements of a linked list */
#long sum_list(list_ptr ls)
#{
#    long val = 0;
#    while (ls) {
#        val += ls->val;
#        ls = ls->next;
#    }
#    return val;
#}

sum_list:
  irmovq $8, %r9
  xorq %rax, %rax
  jmp test
loop:
  mrmovq (%rdi), %r10
  addq %r10,%rax
  addq %r9, %rdi
  mrmovq (%rdi),%rdi
test: 
  andq %rdi, %rdi
  jne loop
  ret



# Stack starts here and grows to lower addresses
  .pos 0x200
stack:

